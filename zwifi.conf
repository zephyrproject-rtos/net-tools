# Configuration file for setting IP addresses for a wifi network interface.

INTERFACE="$1"
INTERFACE_AP="${INTERFACE}-ap"

PID_FILE_HOSTAPD=/var/run/zephyr-hostapd.pid
PID_FILE_WPA_SUPPLICANT=/var/run/zephyr-wpa_supplicant.pid

LOG_FILE_HOSTAPD=/var/log/zephyr-hostapd.log
LOG_FILE_WPA_SUPPLICANT=/var/log/zephyr-wpa_supplicant.log

HWADDR_AP="00:00:5e:00:53:fd"
HWADDR="00:00:5e:00:53:fe"

IPV6_ADDR_1="2001:db8::2"
IPV6_ROUTE_1="2001:db8::/64"

IPV4_ADDR_1="192.0.2.2/24"
IPV4_ROUTE_1="192.0.2.0/24"

# We do not want the default tun device as the hwsim will create one for us.
# As the tun device is created by net-setup.sh automatically, delete it here.
# Create it back in zwifi.conf.stop script in order to avoid error prints.
ip tuntap del "$INTERFACE" mode tap

modprobe mac80211_hwsim radios=2
if [ $? -ne 0 ]; then
   exit 1
fi

# Rename wlan0 and wlan1 to something Zephyr specific
ip link set dev wlan0 down
ip link set dev wlan1 down

# wlan0 is for AP
ip link set dev wlan0 name "${INTERFACE_AP}"
ip link set dev "${INTERFACE_AP}" up
ip link set dev "${INTERFACE_AP}" address ${HWADDR_AP}

# wlan1 is for station
ip link set dev wlan1 name "${INTERFACE}"
ip link set dev "${INTERFACE}" up
ip link set dev "${INTERFACE}" address ${HWADDR}

# Create a namespace that hostapd is running at
AP_NS=zwifi-ap

ip netns add $AP_NS

PHY_AP=$(iw dev "${INTERFACE_AP}" info | grep wiphy | awk '{print "phy"$2}')
if [ -z "$PHY_AP" ]; then
   echo "Invalid phy $PHY_AP"
   exit 1
fi

# Bind phy to our namespace
iw phy "$PHY_AP" set netns name $AP_NS

ip netns exec $AP_NS hostapd -B -f "$LOG_FILE_HOSTAPD" \
   -P "$PID_FILE_HOSTAPD" -i "${INTERFACE_AP}" hostapd.conf

ip netns exec $AP_NS ip -6 address add $IPV6_ADDR_1 dev "${INTERFACE_AP}" nodad
ip netns exec $AP_NS ip -6 route add $IPV6_ROUTE_1 dev "${INTERFACE_AP}"
ip netns exec $AP_NS ip address add $IPV4_ADDR_1 dev "${INTERFACE_AP}"
ip netns exec $AP_NS ip route add $IPV4_ROUTE_1 dev "${INTERFACE_AP}" > /dev/null 2>&1

# Now everything is ready so that Zephyr wpa_supplicant can connect to the
# simulated wifi network.
